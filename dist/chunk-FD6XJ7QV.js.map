{"version":3,"sources":["../src/wallets.ts"],"names":["injectedExtension"],"mappings":"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","sourcesContent":["import { SubstrateWallet, SubstrateWalletPlatform } from '@/types'\nimport type {\n  InjectedAccount,\n  InjectedExtension,\n  InjectedWindow,\n} from '@polkadot/extension-inject/types'\nimport { getNightlyConnectAdapter } from './helpers/getNightlyAdapter'\n\n/**\n * Defined Substrate Wallet Constants\n */\nexport const polkadotjs: SubstrateWallet = {\n  id: 'polkadot-js',\n  name: 'Polkadot{.js}',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://polkadot.js.org/extension/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/polkadot%7Bjs%7D-extension/mopnmbcafieddcagagdcbnhejhlodfdd',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/polkadot-js-extension/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/polkadot@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/polkadot@512w.png',\n  ],\n}\n\nexport const subwallet: SubstrateWallet = {\n  id: 'subwallet-js',\n  name: 'SubWallet',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://subwallet.app/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/subwallet-polkadot-extens/onhogfjeacnfoofkfgppdlbmlmnplgbn',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/subwallet/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/subwallet@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/subwallet@512w.png',\n  ],\n}\n\nexport const talisman: SubstrateWallet = {\n  id: 'talisman',\n  name: 'Talisman',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://www.talisman.xyz/',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/talisman-polkadot-wallet/fijngjgcjhjmmpcmkeiomlglpeiijkld',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/talisman-wallet-extension/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/talisman@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/talisman@512w.png',\n  ],\n}\n\nexport const nova: SubstrateWallet = {\n  id: 'nova',\n  name: 'Nova Wallet',\n  platforms: [SubstrateWalletPlatform.Android, SubstrateWalletPlatform.iOS],\n  urls: {\n    website: 'https://novawallet.io/',\n    androidApp: 'https://play.google.com/store/apps/details?id=io.novafoundation.nova.market',\n    iosApp: 'https://apps.apple.com/app/nova-polkadot-kusama-wallet/id1597119355',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nova@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nova@512w.png',\n  ],\n}\n\nexport const alephzeroSigner: SubstrateWallet = {\n  id: 'aleph-zero-signer',\n  name: 'Aleph Zero Signer',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://alephzero.org/signer',\n    chromeExtension: 'https://chrome.google.com/webstore/detail/opbinaebpmphpefcimknblieddamhmol',\n    firefoxExtension: 'https://addons.mozilla.org/en-US/firefox/addon/aleph-zero-signer/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/aleph-zero-signer@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/aleph-zero-signer@512w.png',\n  ],\n}\n\nexport const nightly: SubstrateWallet = {\n  id: 'Nightly',\n  name: 'Nightly Wallet',\n  platforms: [SubstrateWalletPlatform.Browser],\n  urls: {\n    website: 'https://wallet.nightly.app',\n    chromeExtension:\n      'https://chrome.google.com/webstore/detail/nightly/fiikommddbeccaoicoejoniammnalkfa?hl=en',\n    firefoxExtension: 'https://addons.mozilla.org/en-GB/firefox/addon/nightly-app/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightly@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightly@512w.png',\n  ],\n}\n\nexport const nightlyConnect: SubstrateWallet = {\n  id: 'NightlyConnect',\n  name: 'Nightly Connect',\n  platforms: [\n    SubstrateWalletPlatform.Browser,\n    SubstrateWalletPlatform.Android,\n    SubstrateWalletPlatform.iOS,\n  ],\n  urls: {\n    website: 'https://connect.nightly.app/docs/',\n  },\n  logoUrls: [\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightlyConnect@128w.png',\n    'https://github.com/scio-labs/use-inkathon/raw/main/assets/wallet-logos/nightlyConnect@512w.png',\n  ],\n}\n/**\n * Exporting all wallets separately\n */\nexport const allSubstrateWallets: SubstrateWallet[] = [\n  subwallet,\n  talisman,\n  polkadotjs,\n  nova,\n  alephzeroSigner,\n  nightly,\n  nightlyConnect,\n]\n\n/**\n * Returns wallet (if existent) for given identifier (`id` field).\n */\nexport const getSubstrateWallet = (id: string): SubstrateWallet | undefined => {\n  return allSubstrateWallets.find((wallet) => wallet.id === id)\n}\n\n/*\n * Returns `true` if wallet is installed, `false` if not, and\n * `undefined` if the environment is not a client browser.\n *\n * TODO: Check chain-specific availability (i.e. NightlyConnect is only available on Aleph Zero)\n */\nexport const isWalletInstalled = (wallet: SubstrateWallet) => {\n  try {\n    if (typeof window === 'undefined') return undefined\n    const injectedWindow = window as Window & InjectedWindow\n    const injectedExtension = injectedWindow?.injectedWeb3?.[wallet.id]\n\n    // Special case for Nova Wallet\n    const novaIsInstalled = !!(injectedWindow as any).walletExtension?.isNovaWallet\n    if (novaIsInstalled && wallet.id === polkadotjs.id) return false\n    if (novaIsInstalled && wallet.id === nova.id) return true\n\n    // A special case for NightlyConnect, as it serves as a selector.\n    if (wallet.id === nightlyConnect.id) return true\n\n    return !!injectedExtension\n  } catch (e) {\n    return undefined\n  }\n}\n\n/**\n * Enables the given wallet (if existent) and returns the injected extension.\n */\nexport const enableWallet = async (wallet: SubstrateWallet, appName: string) => {\n  if (!isWalletInstalled(wallet)) return undefined\n\n  try {\n    if (typeof window === 'undefined') return undefined\n    const injectedWindow = window as InjectedWindow\n\n    // NightlyConnect is a selector, it needs a special case to handle the connection\n    if (wallet.id === nightlyConnect.id) {\n      let adapter: any\n      try {\n        adapter = await getNightlyConnectAdapter(appName)\n        await adapter.connect()\n        const injectedExtension: InjectedExtension = {\n          accounts: {\n            ...adapter.accounts,\n            // A special case that probably results from the way packages are bundled\n            subscribe: (cb: (accounts: InjectedAccount[]) => void | Promise<void>) => {\n              const unsub = adapter.accounts.subscribe(cb)\n              adapter.accounts._triggerSubs()\n              return unsub\n            },\n          },\n          signer: adapter.signer,\n          name: wallet.id,\n          version: '0.1.10',\n        }\n        return injectedExtension\n      } catch (e) {\n        await adapter?.disconnect().catch(() => {})\n        throw new Error('Error while enabling NightlyConnect')\n      }\n    }\n\n    const injectedWindowProvider =\n      injectedWindow?.injectedWeb3?.[wallet.id === nova.id ? polkadotjs.id : wallet.id]\n    if (!injectedWindowProvider?.enable)\n      throw new Error('No according `InjectedWindowProvider` found.')\n\n    const injected = await injectedWindowProvider.enable(appName)\n    const injectedExtension: InjectedExtension = {\n      ...injected,\n      name: wallet.id,\n      version: injectedWindowProvider.version || '',\n    }\n    return injectedExtension\n  } catch (e) {\n    console.error('Error while enabling wallet', e)\n    return undefined\n  }\n}\n"]}
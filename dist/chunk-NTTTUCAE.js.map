{"version":3,"sources":["../src/helpers/getWebsiteIcon.ts","../src/helpers/getNightlyAdapter.ts"],"names":[],"mappings":";;;;;AAAO,IAAM,iBAAiB,CAAO,WAAgD;AACnF,MAAI;AACF,UAAM,OAAO,OAAO,MAAM,MAAM,MAAM,GAAG,KAAK;AAC9C,UAAM,sBAAsB;AAC5B,UAAM,eAAe;AACrB,UAAM,sBAAsB,KAAK,MAAM,mBAAmB;AAC1D,UAAM,eAAe,KAAK,MAAM,YAAY;AAC5C,QAAI,2DAAsB,IAAI;AAC5B,YAAM,UAAU,IAAI,IAAI,oBAAoB,CAAC,GAAG,MAAM,EAAE;AACxD,aAAO;AAAA,IACT,WAAW,6CAAe,IAAI;AAC5B,YAAM,UAAU,IAAI,IAAI,aAAa,CAAC,GAAG,MAAM,EAAE;AACjD,aAAO;AAAA,IACT;AAEA,UAAM,eAAe,MAAM,MAAM,SAAS,cAAc;AACxD,QAAI,aAAa,WAAW,KAAK;AAC/B,aAAO,SAAS;AAAA,IAClB;AAEA,WAAO;AAAA,EACT,SAAQ;AACN,WAAO;AAAA,EACT;AACF;;;ACxBA,SAAS,6BAA6B;AAItC,IAAI;AACG,IAAM,2BAA2B,CACtC,SACA,SACA,WACA,YAAY,SACT;AACH,MAAI;AAAU,WAAO;AAErB,MAAI;AACF,UAAM,OAAO,YAAW,iCAAQ,SAAS;AACzC,UAAM,OAAO,YAAY,MAAM,eAAe,iCAAQ,MAAM;AAC5D,UAAM,cAAc,cAAa,iCAAQ;AAEzC,eAAW,MAAM,sBAAsB;AAAA,MACrC;AAAA,QACE,aAAa,EAAE,MAAM,MAAM,YAAY;AAAA,QACvC,SAAS;AAAA,MACX;AAAA,MACA;AAAA,IACF;AAAA,EACF,SAAS,GAAG;AACV,WAAO;AAAA,EACT;AAEA,SAAO;AACT","sourcesContent":["export const getWebsiteIcon = async (origin: string): Promise<string | undefined> => {\n  try {\n    const text = await (await fetch(origin)).text()\n    const appleTouchIconRegex = /<link\\s.*?rel=\"apple-touch-icon\".*?href=\"(.*?)\".*?>/i\n    const faviconRegex = /<link\\s.*?rel=(?:\"icon\"|\"shortcut icon\").*?href=\"(.*?)\".*?>/i\n    const appleTouchIconMatch = text.match(appleTouchIconRegex)\n    const faviconMatch = text.match(faviconRegex)\n    if (appleTouchIconMatch?.[1]) {\n      const iconUrl = new URL(appleTouchIconMatch[1], origin).href\n      return iconUrl\n    } else if (faviconMatch?.[1]) {\n      const iconUrl = new URL(faviconMatch[1], origin).href\n      return iconUrl\n    }\n\n    const faviconExist = await fetch(origin + '/favicon.ico')\n    if (faviconExist.status === 200) {\n      return origin + '/favicon.ico'\n    }\n\n    return undefined\n  } catch {\n    return undefined\n  }\n}\n","import { NightlyConnectAdapter } from '@nightlylabs/wallet-selector-polkadot'\nimport { getWebsiteIcon } from './getWebsiteIcon'\n\n// In the case of the optional library, types are not available\nlet _adapter: any | undefined\nexport const getNightlyConnectAdapter = async (\n  appName?: string,\n  appIcon?: string,\n  appOrigin?: string,\n  persisted = true,\n) => {\n  if (_adapter) return _adapter\n\n  try {\n    const name = appName || window?.location.hostname\n    const icon = appIcon || (await getWebsiteIcon(window?.origin))\n    const description = appOrigin || window?.origin\n\n    _adapter = await NightlyConnectAdapter.build(\n      {\n        appMetadata: { name, icon, description },\n        network: 'AlephZero',\n      },\n      persisted,\n    )\n  } catch (e) {\n    return undefined\n  }\n\n  return _adapter\n}\n"]}